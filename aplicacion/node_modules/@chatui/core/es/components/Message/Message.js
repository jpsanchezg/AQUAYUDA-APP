import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import clsx from 'clsx';
import { SystemMessage } from './SystemMessage';
import { Avatar } from '../Avatar';
import { Time } from '../Time';
import { Typing } from '../Typing';

var Message = function Message(props) {
  var _props$renderMessageC = props.renderMessageContent,
      renderMessageContent = _props$renderMessageC === void 0 ? function () {
    return null;
  } : _props$renderMessageC,
      msg = _objectWithoutProperties(props, ["renderMessageContent"]);

  var id = msg._id,
      type = msg.type,
      content = msg.content,
      user = msg.user;

  if (type === 'system') {
    return /*#__PURE__*/React.createElement(SystemMessage, {
      content: content.text,
      action: content.action,
      key: id
    });
  }

  return /*#__PURE__*/React.createElement("div", {
    className: clsx('Message', msg.position),
    "data-type": type,
    key: id
  }, msg.hasTime && msg.createdAt && /*#__PURE__*/React.createElement("div", {
    className: "Message-meta"
  }, /*#__PURE__*/React.createElement(Time, {
    date: msg.createdAt
  })), /*#__PURE__*/React.createElement("div", {
    className: "Message-content",
    role: "alert",
    "aria-live": "assertive",
    "aria-atomic": "false"
  }, user && user.avatar && /*#__PURE__*/React.createElement(Avatar, {
    src: user.avatar,
    shape: "square"
  }), type === 'typing' ? /*#__PURE__*/React.createElement(Typing, null) : renderMessageContent(msg)));
};

Message.defaultProps = {
  user: {},
  position: 'left',
  hasTime: true
};
export default /*#__PURE__*/React.memo(Message);