import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import clsx from 'clsx';

function composeClass(type) {
  return type && "Btn--".concat(type);
}

export var Button = function Button(props) {
  var className = props.className,
      label = props.label,
      color = props.color,
      variant = props.variant,
      size = props.size,
      _props$loading = props.loading,
      loading = _props$loading === void 0 ? false : _props$loading,
      block = props.block,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      children = props.children,
      onClick = props.onClick,
      other = _objectWithoutProperties(props, ["className", "label", "color", "variant", "size", "loading", "block", "disabled", "children", "onClick"]);

  function handleClick(e) {
    if (!disabled && !loading && onClick) {
      onClick(e);
    }
  }

  return /*#__PURE__*/React.createElement("button", _extends({
    className: clsx('Btn', composeClass(color), composeClass(variant), composeClass(size), {
      'Btn--block': block
    }, className),
    type: "button",
    disabled: disabled,
    onClick: handleClick
  }, other), label || children);
};