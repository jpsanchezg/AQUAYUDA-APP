"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Base = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _clsx = _interopRequireDefault(require("clsx"));

var _useMount2 = _interopRequireDefault(require("../../hooks/useMount"));

var _Backdrop = require("../Backdrop");

var _IconButton = require("../IconButton");

var _Button = require("../Button");

var _useNextId = _interopRequireDefault(require("../../hooks/useNextId"));

var _toggleClass = _interopRequireDefault(require("../../utils/toggleClass"));

var Base = function Base(props) {
  var baseClass = props.baseClass,
      active = props.active,
      className = props.className,
      title = props.title,
      _props$titleId = props.titleId,
      titleId = _props$titleId === void 0 ? (0, _useNextId.default)('modal-') : _props$titleId,
      _props$showClose = props.showClose,
      showClose = _props$showClose === void 0 ? true : _props$showClose,
      _props$autoFocus = props.autoFocus,
      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,
      _props$backdrop = props.backdrop,
      backdrop = _props$backdrop === void 0 ? true : _props$backdrop,
      overflow = props.overflow,
      actions = props.actions,
      _props$vertical = props.vertical,
      vertical = _props$vertical === void 0 ? true : _props$vertical,
      children = props.children,
      onClose = props.onClose;
  var wrapper = (0, _react.useRef)(null);

  var _useMount = (0, _useMount2.default)({
    active: active,
    ref: wrapper
  }),
      didMount = _useMount.didMount,
      isShow = _useMount.isShow;

  (0, _react.useEffect)(function () {
    if (autoFocus && wrapper.current) {
      wrapper.current.focus();
    }
  }, [autoFocus, didMount]);
  (0, _react.useEffect)(function () {
    (0, _toggleClass.default)('S--modalOpen', isShow);
  }, [isShow]);
  if (!didMount) return null;
  return /*#__PURE__*/(0, _reactDom.createPortal)( /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _clsx.default)(baseClass, className, {
      active: isShow
    }),
    ref: wrapper,
    tabIndex: -1
  }, backdrop && /*#__PURE__*/_react.default.createElement(_Backdrop.Backdrop, {
    active: isShow,
    onClick: backdrop === true && onClose ? onClose : undefined
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(baseClass, "-dialog"),
    role: "dialog",
    "aria-labelledby": titleId,
    "aria-modal": true
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(baseClass, "-content")
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(baseClass, "-header")
  }, /*#__PURE__*/_react.default.createElement("h5", {
    className: "".concat(baseClass, "-title"),
    id: titleId
  }, title), showClose && onClose && /*#__PURE__*/_react.default.createElement(_IconButton.IconButton, {
    className: "".concat(baseClass, "-close"),
    icon: "close",
    onClick: onClose,
    "aria-label": "\u5173\u95ED"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _clsx.default)("".concat(baseClass, "-body"), {
      overflow: overflow
    })
  }, children), actions && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(baseClass, "-footer ").concat(baseClass, "-footer--").concat(vertical ? 'v' : 'h')
  }, actions.map(function (item, i) {
    return /*#__PURE__*/_react.default.createElement(_Button.Button, (0, _extends2.default)({}, item, {
      key: i
    }));
  }))))), document.body);
};

exports.Base = Base;