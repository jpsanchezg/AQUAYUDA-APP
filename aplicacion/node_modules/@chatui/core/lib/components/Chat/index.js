"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chat = void 0;

var _react = _interopRequireDefault(require("react"));

var _LocaleProvider = require("../LocaleProvider");

var _Navbar = require("../Navbar");

var _MessageContainer = require("../MessageContainer");

var _QuickReplies = require("../QuickReplies");

var _Composer = require("../Composer");

/* eslint-disable react/forbid-prop-types */
var Chat = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var wideBreakpoint = props.wideBreakpoint,
      _props$locale = props.locale,
      locale = _props$locale === void 0 ? 'zh-CN' : _props$locale,
      locales = props.locales,
      navbar = props.navbar,
      renderNavbar = props.renderNavbar,
      loadMoreText = props.loadMoreText,
      renderBeforeMessageList = props.renderBeforeMessageList,
      messagesRef = props.messagesRef,
      onRefresh = props.onRefresh,
      onScroll = props.onScroll,
      _props$messages = props.messages,
      messages = _props$messages === void 0 ? [] : _props$messages,
      renderMessageContent = props.renderMessageContent,
      _props$quickReplies = props.quickReplies,
      quickReplies = _props$quickReplies === void 0 ? [] : _props$quickReplies,
      quickRepliesVisible = props.quickRepliesVisible,
      _props$onQuickReplyCl = props.onQuickReplyClick,
      onQuickReplyClick = _props$onQuickReplyCl === void 0 ? function () {} : _props$onQuickReplyCl,
      onQuickReplyScroll = props.onQuickReplyScroll,
      renderQuickReplies = props.renderQuickReplies,
      text = props.text,
      placeholder = props.placeholder,
      onInputFocus = props.onInputFocus,
      onInputChange = props.onInputChange,
      onInputBlur = props.onInputBlur,
      onSend = props.onSend,
      onImageSend = props.onImageSend,
      composerRef = props.composerRef,
      inputType = props.inputType,
      onInputTypeChange = props.onInputTypeChange,
      recorder = props.recorder,
      toolbar = props.toolbar,
      onToolbarClick = props.onToolbarClick,
      onAccessoryToggle = props.onAccessoryToggle,
      rightAction = props.rightAction,
      _props$Composer = props.Composer,
      Composer = _props$Composer === void 0 ? _Composer.Composer : _props$Composer;
  return /*#__PURE__*/_react.default.createElement(_LocaleProvider.LocaleProvider, {
    locale: locale,
    locales: locales
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "ChatApp",
    ref: ref
  }, renderNavbar ? renderNavbar() : navbar && /*#__PURE__*/_react.default.createElement(_Navbar.Navbar, navbar), /*#__PURE__*/_react.default.createElement(_MessageContainer.MessageContainer, {
    ref: messagesRef,
    loadMoreText: loadMoreText,
    messages: messages,
    renderBeforeMessageList: renderBeforeMessageList,
    renderMessageContent: renderMessageContent,
    onRefresh: onRefresh,
    onScroll: onScroll
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "ChatFooter"
  }, renderQuickReplies ? renderQuickReplies() : /*#__PURE__*/_react.default.createElement(_QuickReplies.QuickReplies, {
    items: quickReplies,
    visible: quickRepliesVisible,
    onClick: onQuickReplyClick,
    onScroll: onQuickReplyScroll
  }), /*#__PURE__*/_react.default.createElement(Composer, {
    wideBreakpoint: wideBreakpoint,
    ref: composerRef,
    inputType: inputType,
    text: text,
    placeholder: placeholder,
    onAccessoryToggle: onAccessoryToggle,
    recorder: recorder,
    toolbar: toolbar,
    onToolbarClick: onToolbarClick,
    onInputTypeChange: onInputTypeChange,
    onFocus: onInputFocus,
    onChange: onInputChange,
    onBlur: onInputBlur,
    onSend: onSend,
    onImageSend: onImageSend,
    rightAction: rightAction
  }))));
});

exports.Chat = Chat;