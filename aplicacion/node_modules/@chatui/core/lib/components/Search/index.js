"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Search = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _Icon = require("../Icon");

var _IconButton = require("../IconButton");

var _Input = require("../Input");

var Search = function Search(_ref) {
  var className = _ref.className,
      onSearch = _ref.onSearch,
      onCancel = _ref.onCancel,
      value = _ref.value,
      _ref$clearable = _ref.clearable,
      clearable = _ref$clearable === void 0 ? true : _ref$clearable,
      other = (0, _objectWithoutProperties2.default)(_ref, ["className", "onSearch", "onCancel", "value", "clearable"]);

  var _useState = (0, _react.useState)(value || ''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      query = _useState2[0],
      setQuery = _useState2[1];

  function handleChange(val) {
    setQuery(val);
  }

  function handleClear() {
    setQuery('');
  }

  function handleKeyDown(e) {
    if (e.keyCode === 13) {
      if (onSearch) {
        onSearch(query);
      }

      e.preventDefault();
    }
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _clsx.default)('Search', className)
  }, /*#__PURE__*/_react.default.createElement(_Icon.Icon, {
    className: "Search-icon",
    type: "search"
  }), /*#__PURE__*/_react.default.createElement(_Input.Input, (0, _extends2.default)({
    className: "Search-input",
    type: "search",
    value: query,
    onChange: handleChange,
    onKeyDown: handleKeyDown
  }, other)), clearable && query && /*#__PURE__*/_react.default.createElement(_IconButton.IconButton, {
    className: "Search-clear",
    icon: "close",
    onClick: handleClear
  }));
};

exports.Search = Search;