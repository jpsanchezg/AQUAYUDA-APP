"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Stepper = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Stepper = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var className = props.className,
      _props$current = props.current,
      current = _props$current === void 0 ? 0 : _props$current,
      children = props.children,
      other = (0, _objectWithoutProperties2.default)(props, ["className", "current", "children"]);

  var childrenArray = _react.default.Children.toArray(children);

  var steps = childrenArray.map(function (child, index) {
    var state = {
      index: index,
      active: false,
      completed: false,
      disabled: false
    };

    if (current === index) {
      state.active = true;
    } else if (current > index) {
      state.completed = true;
    } else {
      state.disabled = true;
    }

    return /*#__PURE__*/_react.default.isValidElement(child) ? /*#__PURE__*/_react.default.cloneElement(child, _objectSpread(_objectSpread({}, state), child.props)) : null;
  });
  return /*#__PURE__*/_react.default.createElement("ul", (0, _extends2.default)({
    className: (0, _clsx.default)('Stepper', className),
    ref: ref
  }, other), steps);
});

exports.Stepper = Stepper;