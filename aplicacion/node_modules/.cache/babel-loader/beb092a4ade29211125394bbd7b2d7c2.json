{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sices\\\\Documents\\\\GitHub\\\\AQUAYUDA-APP\\\\aplicacion\\\\src\\\\components\\\\chat\\\\Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Chat, { Bubble, useMessages } from '@chatui/core';\nimport '@chatui/core/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    messages,\n    appendMsg,\n    setTyping\n  } = useMessages([]);\n\n  function handleSend(type, val) {\n    if (type === 'text' && val.trim()) {\n      appendMsg({\n        type: 'text',\n        content: {\n          text: val\n        },\n        position: 'right'\n      });\n      setTyping(true);\n      setTimeout(() => {\n        appendMsg({\n          type: 'text',\n          content: {\n            text: 'Bala bala'\n          }\n        });\n      }, 1000);\n    }\n  }\n\n  function renderMessageContent(msg) {\n    const {\n      content\n    } = msg;\n    return /*#__PURE__*/_jsxDEV(Bubble, {\n      content: content.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    navbar: {\n      title: 'Assistant'\n    },\n    messages: messages,\n    renderMessageContent: renderMessageContent,\n    onSend: handleSend\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"QcNvU78uK7mBLeMFe/kRjssc5Qo=\", false, function () {\n  return [useMessages];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sices/Documents/GitHub/AQUAYUDA-APP/aplicacion/src/components/chat/Chatbot.js"],"names":["React","useState","Chat","Bubble","useMessages","App","messages","appendMsg","setTyping","handleSend","type","val","trim","content","text","position","setTimeout","renderMessageContent","msg","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,IAAeC,MAAf,EAAuBC,WAAvB,QAA0C,cAA1C;AACA,OAAO,6BAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAqCJ,WAAW,CAAC,EAAD,CAAtD;;AAEA,WAASK,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC3B,QAAID,IAAI,KAAK,MAAT,IAAmBC,GAAG,CAACC,IAAJ,EAAvB,EAAmC;AAC/BL,MAAAA,SAAS,CAAC;AACNG,QAAAA,IAAI,EAAE,MADA;AAENG,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR,SAFH;AAGNI,QAAAA,QAAQ,EAAE;AAHJ,OAAD,CAAT;AAMAP,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEAQ,MAAAA,UAAU,CAAC,MAAM;AACbT,QAAAA,SAAS,CAAC;AACNG,UAAAA,IAAI,EAAE,MADA;AAENG,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAFH,SAAD,CAAT;AAIH,OALS,EAKP,IALO,CAAV;AAMH;AACJ;;AAED,WAASG,oBAAT,CAA8BC,GAA9B,EAAmC;AAC/B,UAAM;AAAEL,MAAAA;AAAF,QAAcK,GAApB;AACA,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEL,OAAO,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,IAAD;AACI,IAAA,MAAM,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KADZ;AAEI,IAAA,QAAQ,EAAEb,QAFd;AAGI,IAAA,oBAAoB,EAAEW,oBAH1B;AAII,IAAA,MAAM,EAAER;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnCD;;GAAMJ,G;UACyCD,W;;;KADzCC,G","sourcesContent":["import React, {useState} from \"react\";\r\nimport Chat, { Bubble, useMessages } from '@chatui/core';\r\nimport '@chatui/core/dist/index.css';\r\n\r\nconst App = () => {\r\n    const { messages, appendMsg, setTyping } = useMessages([]);\r\n\r\n    function handleSend(type, val) {\r\n        if (type === 'text' && val.trim()) {\r\n            appendMsg({\r\n                type: 'text',\r\n                content: { text: val },\r\n                position: 'right',\r\n            });\r\n\r\n            setTyping(true);\r\n\r\n            setTimeout(() => {\r\n                appendMsg({\r\n                    type: 'text',\r\n                    content: { text: 'Bala bala' },\r\n                });\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    function renderMessageContent(msg) {\r\n        const { content } = msg;\r\n        return <Bubble content={content.text} />;\r\n    }\r\n\r\n    return (\r\n        <Chat\r\n            navbar={{ title: 'Assistant' }}\r\n            messages={messages}\r\n            renderMessageContent={renderMessageContent}\r\n            onSend={handleSend}\r\n        />\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}