{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sices\\\\Documents\\\\GitHub\\\\AQUAYUDA-APP\\\\aplicacion\\\\src\\\\pages\\\\Pricing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AnimationRevealPage from \"helpers/AnimationRevealPage.js\";\nimport Header from \"components/headers/light.js\";\nimport chat from \"components/chat/Chatbot.js\";\nimport Footer from \"components/footers/FiveColumnWithInputForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    messages,\n    appendMsg,\n    setTyping\n  } = useMessages([]);\n\n  function handleSend(type, val) {\n    if (type === \"text\" && val.trim()) {\n      appendMsg({\n        type: \"text\",\n        content: {\n          text: val\n        },\n        position: \"right\"\n      });\n      setTyping(true);\n      setTimeout(() => {\n        appendMsg({\n          type: \"text\",\n          content: {\n            text: \"Bala bala\"\n          }\n        });\n      }, 1000);\n    }\n  }\n\n  function renderMessageContent(msg) {\n    const {\n      content\n    } = msg;\n    return /*#__PURE__*/_jsxDEV(Bubble, {\n      content: content.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    navbar: {\n      title: \"hello\"\n    },\n    messages: messages,\n    renderMessageContent: renderMessageContent,\n    onSend: handleSend\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QcNvU78uK7mBLeMFe/kRjssc5Qo=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sices/Documents/GitHub/AQUAYUDA-APP/aplicacion/src/pages/Pricing.js"],"names":["React","AnimationRevealPage","Header","chat","Footer","App","messages","appendMsg","setTyping","useMessages","handleSend","type","val","trim","content","text","position","setTimeout","renderMessageContent","msg","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,+CAAnB;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAqCC,WAAW,CAAC,EAAD,CAAtD;;AAEA,WAASC,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,QAAID,IAAI,KAAK,MAAT,IAAmBC,GAAG,CAACC,IAAJ,EAAvB,EAAmC;AACjCN,MAAAA,SAAS,CAAC;AACRI,QAAAA,IAAI,EAAE,MADE;AAERG,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR,SAFD;AAGRI,QAAAA,QAAQ,EAAE;AAHF,OAAD,CAAT;AAMAR,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEAS,MAAAA,UAAU,CAAC,MAAM;AACfV,QAAAA,SAAS,CAAC;AACRI,UAAAA,IAAI,EAAE,MADE;AAERG,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAFD,SAAD,CAAT;AAID,OALS,EAKP,IALO,CAAV;AAMD;AACF;;AAED,WAASG,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,UAAM;AAAEL,MAAAA;AAAF,QAAcK,GAApB;AACA,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEL,OAAO,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,IAAD;AACE,IAAA,MAAM,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KADV;AAEE,IAAA,QAAQ,EAAEd,QAFZ;AAGE,IAAA,oBAAoB,EAAEY,oBAHxB;AAIE,IAAA,MAAM,EAAER;AAJV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnCuBL,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport AnimationRevealPage from \"helpers/AnimationRevealPage.js\";\nimport Header from \"components/headers/light.js\";\nimport chat from \"components/chat/Chatbot.js\";\nimport Footer from \"components/footers/FiveColumnWithInputForm.js\";\n\n\nexport default function App() {\n  const { messages, appendMsg, setTyping } = useMessages([]);\n\n  function handleSend(type, val) {\n    if (type === \"text\" && val.trim()) {\n      appendMsg({\n        type: \"text\",\n        content: { text: val },\n        position: \"right\"\n      });\n\n      setTyping(true);\n\n      setTimeout(() => {\n        appendMsg({\n          type: \"text\",\n          content: { text: \"Bala bala\" }\n        });\n      }, 1000);\n    }\n  }\n\n  function renderMessageContent(msg) {\n    const { content } = msg;\n    return <Bubble content={content.text} />;\n  }\n\n  return (\n    <Chat\n      navbar={{ title: \"hello\" }}\n      messages={messages}\n      renderMessageContent={renderMessageContent}\n      onSend={handleSend}\n    />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}