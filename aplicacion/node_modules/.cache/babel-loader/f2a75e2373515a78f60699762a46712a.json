{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sices\\\\Documents\\\\GitHub\\\\AQUAYUDA-APP\\\\aplicacion\\\\src\\\\pages\\\\Pricing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AnimationRevealPage from \"helpers/AnimationRevealPage.js\";\nimport Header from \"components/headers/light.js\";\nimport chat from \"components/chat/Chatbot.js\";\nimport Footer from \"components/footers/FiveColumnWithInputForm.js\";\nimport Chat, { Bubble, useMessages } from \"@chatui/core\";\nimport \"@chatui/core/dist/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMessages = [{\n  type: 'text',\n  content: {\n    text: 'Bienvenido al chat de aquayuda'\n  },\n  user: {\n    avatar: '//gw.alicdn.com/tfs/TB1DYHLwMHqK1RjSZFEXXcGMXXa-56-62.svg'\n  }\n}];\nconst initialMessages2 = [{\n  type: 'text',\n  content: {\n    text: 'En que te podemos ayudar?'\n  },\n  user: {\n    avatar: '//gw.alicdn.com/tfs/TB1DYHLwMHqK1RjSZFEXXcGMXXa-56-62.svg'\n  }\n}]; // 默认快捷短语，可选\n\nconst defaultQuickReplies = [{\n  icon: 'message',\n  name: 'Reportar',\n  isNew: true,\n  isHighlight: true\n}, {\n  name: 'Soporte',\n  isNew: true\n}, {\n  name: 'PQR',\n  isHighlight: true\n}, {\n  name: 'FAQS'\n}];\nexport default _s(() => {\n  _s();\n\n  // 消息列表\n  const {\n    messages,\n    appendMsg,\n    setTyping\n  } = useMessages(initialMessages, initialMessages2); // 发送回调\n\n  function handleSend(type, val) {\n    if (type === 'text' && val.trim()) {\n      // TODO: 发送请求\n      appendMsg({\n        type: 'text',\n        content: {\n          text: val\n        },\n        position: 'right'\n      });\n      setTyping(true); // 模拟回复消息\n\n      setTimeout(() => {\n        appendMsg({\n          type: 'text',\n          content: {\n            text: 'Dentro de unos minutos te va a atender una persona '\n          }\n        });\n      }, 1000);\n    }\n  }\n\n  function handleQuickReplyClick(item) {\n    handleSend('text', item.name);\n  }\n\n  function renderMessageContent(msg) {\n    const {\n      type,\n      content\n    } = msg; // 根据消息类型来渲染\n\n    switch (type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(Bubble, {\n          content: content.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(Bubble, {\n          type: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: content.picUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AnimationRevealPage, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      navbar: {\n        title: 'Asistente'\n      },\n      messages: messages,\n      renderMessageContent: renderMessageContent,\n      quickReplies: defaultQuickReplies,\n      onQuickReplyClick: handleQuickReplyClick,\n      onSend: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n}, \"QcNvU78uK7mBLeMFe/kRjssc5Qo=\", false, function () {\n  return [useMessages];\n});","map":{"version":3,"sources":["C:/Users/sices/Documents/GitHub/AQUAYUDA-APP/aplicacion/src/pages/Pricing.js"],"names":["React","AnimationRevealPage","Header","chat","Footer","Chat","Bubble","useMessages","initialMessages","type","content","text","user","avatar","initialMessages2","defaultQuickReplies","icon","name","isNew","isHighlight","messages","appendMsg","setTyping","handleSend","val","trim","position","setTimeout","handleQuickReplyClick","item","renderMessageContent","msg","picUrl","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AnimationRevealPage from \"helpers/AnimationRevealPage.js\";\nimport Header from \"components/headers/light.js\";\nimport chat from \"components/chat/Chatbot.js\";\nimport Footer from \"components/footers/FiveColumnWithInputForm.js\";\nimport Chat, { Bubble, useMessages } from \"@chatui/core\";\nimport \"@chatui/core/dist/index.css\";\n\nconst initialMessages = [\n  {\n    type: 'text',\n    content: { text: 'Bienvenido al chat de aquayuda' },\n    \n    user: { avatar: '//gw.alicdn.com/tfs/TB1DYHLwMHqK1RjSZFEXXcGMXXa-56-62.svg' },\n  },\n];\n\nconst initialMessages2 = [\n  {\n    type: 'text',\n    content: { text: 'En que te podemos ayudar?' },\n    user: { avatar: '//gw.alicdn.com/tfs/TB1DYHLwMHqK1RjSZFEXXcGMXXa-56-62.svg' },\n  },\n];\n\n// 默认快捷短语，可选\nconst defaultQuickReplies = [\n  {\n    icon: 'message',\n    name: 'Reportar',\n    isNew: true,\n    isHighlight: true,\n  },\n  {\n    name: 'Soporte',\n    isNew: true,\n  },\n  {\n    name: 'PQR',\n    isHighlight: true,\n  },\n  {\n    name: 'FAQS',\n  },\n];\n\nexport default () => {\n  // 消息列表\n  const { messages, appendMsg, setTyping } = useMessages(initialMessages,initialMessages2);\n\n  // 发送回调\n  function handleSend(type, val) {\n    if (type === 'text' && val.trim()) {\n      // TODO: 发送请求\n      appendMsg({\n        type: 'text',\n        content: { text: val },\n        position: 'right',\n      });\n\n      setTyping(true);\n\n      // 模拟回复消息\n      setTimeout(() => {\n        appendMsg({\n          type: 'text',\n          content: { text: 'Dentro de unos minutos te va a atender una persona ' },\n        });\n      }, 1000);\n    }\n  }\n\n  function handleQuickReplyClick(item) {\n    handleSend('text', item.name);\n  }\n\n  function renderMessageContent(msg) {\n    const { type, content } = msg;\n\n    // 根据消息类型来渲染\n    switch (type) {\n      case 'text':\n        return <Bubble content={content.text} />;\n      case 'image':\n        return (\n          <Bubble type=\"image\">\n            <img src={content.picUrl} alt=\"\" />\n          </Bubble>\n        );\n      default:\n        return null;\n    }\n  }\n\nreturn (\n  <AnimationRevealPage>\n    <Header />\n    <Chat\n      navbar={{ title: 'Asistente' }}\n      messages={messages}\n      renderMessageContent={renderMessageContent}\n      quickReplies={defaultQuickReplies}\n      onQuickReplyClick={handleQuickReplyClick}\n      onSend={handleSend}\n    />\n\n    <Footer />\n  </AnimationRevealPage>\n);\n};\n"]},"metadata":{},"sourceType":"module"}